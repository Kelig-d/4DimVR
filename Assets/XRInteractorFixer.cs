using UnityEngine;
using UnityEngine.XR.Interaction.Toolkit;

public class XRInteractorFixer : MonoBehaviour
{
    private XRInteractionManager xrManager;

    private void Start()
    {
        FixInteractors();
    }

    public void FixInteractors()
    {
        // Trouver le XRInteractionManager dans la sc√®ne
        xrManager = FindObjectOfType<XRInteractionManager>();

        if (xrManager != null)
        {
            // R√©assigner le manager √† tous les interactors
            foreach (var interactor in FindObjectsOfType<XRBaseInteractor>())
            {
                interactor.interactionManager = xrManager;
            }

            Debug.Log("‚úÖ XR Interaction Manager r√©assign√© !");
        }
        else
        {
            Debug.LogError("‚ùå Aucun XRInteractionManager trouv√© dans la sc√®ne !");
        }
    }

    // R√©assigner les interacteurs apr√®s chaque t√©l√©portation
    private void OnEnable()
    {
        LocomotionProvider[] locomotionProviders = FindObjectsOfType<LocomotionProvider>();

        foreach (var provider in locomotionProviders)
        {
            provider.endLocomotion += OnTeleportEnd;
        }
    }

    private void OnDisable()
    {
        LocomotionProvider[] locomotionProviders = FindObjectsOfType<LocomotionProvider>();

        foreach (var provider in locomotionProviders)
        {
            provider.endLocomotion -= OnTeleportEnd;
        }
    }

    private void OnTeleportEnd(LocomotionSystem locomotionSystem)
    {
        Debug.Log("üîÑ T√©l√©portation termin√©e, r√©assignation des interacteurs...");
        FixInteractors();
    }
}